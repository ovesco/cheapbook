
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

#Register a user
POST    /register controllers.UserController.register()

#Log as user
POST    /login controllers.UserController.login()

#Logout user
POST    /logout controllers.UserController.logout()

#Run the code in docker and send the result to frontend
POST     /run controllers.ExeController.run()

#Stop the code running in docker environnment
POST     /stop controllers.ExeController.stop()


#Get all the envs in the DB
GET     /env controllers.EnvController.get(token, id)

#Create an env in db
POST    /env controllers.EnvController.post()

#Update an env in db
PUT     /env controllers.EnvController.put()

#Delete an env in db
DELETE  /env controllers.EnvController.delete(token, id)

#Get all the environnment for a user
GET     /env/all controllers.EnvController.getAllEnvironnments(token)

#Get all the dependencies of an env in db
GET     /dependencies controllers.DependenciesController.get(id)

#Create a dependency for an env
POST    /dependencies controllers.DependenciesController.post()

#Update a dependency
PUT     /dependencies controllers.DependenciesController.put()

#Delete a dependency
DELETE  /dependencies controllers.DependenciesController.delete(token, id)

#Get all the environnment for a user
GET     /dependencies/all controllers.DependenciesController.getAlldependencies(token)